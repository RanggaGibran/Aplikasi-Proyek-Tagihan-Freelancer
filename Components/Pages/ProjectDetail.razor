@page "/projects/{Id:guid}"
@using Aplikasi_Proyek___Tagihan_Freelancer.Models
@using Aplikasi_Proyek___Tagihan_Freelancer.Services
@inject IProjectService ProjectService
@inject ITaskService TaskService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Detail Proyek</PageTitle>

<div class="container-fluid">
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Memuat detail proyek...</p>
        </div>
    }
    else if (project == null)
    {
        <div class="alert alert-danger">
            <h4>Proyek Tidak Ditemukan</h4>
            <p>Proyek dengan ID tersebut tidak ditemukan.</p>
            <button class="btn btn-primary" @onclick="GoToProjectList">
                <i class="bi bi-arrow-left me-1"></i> Kembali ke Daftar Proyek
            </button>
        </div>
    }
    else
    {
        <!-- Project Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/projects" class="text-decoration-none">Proyek</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">@project.Name</li>
                            </ol>
                        </nav>
                        <h1 class="page-title mb-1">@project.Name</h1>
                        <p class="text-muted">@project.Description</p>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-outline-primary" @onclick="EditProject">
                            <i class="bi bi-pencil me-1"></i> Edit
                        </button>
                        <button class="btn btn-primary" @onclick="ViewTasks">
                            <i class="bi bi-list-task me-1"></i> Lihat Tugas
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Project Information Cards -->
        <div class="row mb-4">
            <!-- Project Status Card -->
            <div class="col-lg-4 mb-3">
                <div class="card h-100">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>Informasi Proyek
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Status:</label>
                            <div>
                                <span class="badge @GetStatusBadgeClass(project.Status) fs-6">
                                    @project.Status.ToString()
                                </span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Nilai Proyek:</label>
                            <div class="fs-4 text-success fw-bold">
                                @project.TotalValue.ToString("C", new System.Globalization.CultureInfo("id-ID"))
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Tenggat Waktu:</label>
                            <div>
                                @if (project.DueDate.HasValue)
                                {
                                    <span class="@(project.DueDate.Value < DateTime.Now ? "text-danger" : "text-dark")">
                                        @project.DueDate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("id-ID"))
                                        @if (project.DueDate.Value < DateTime.Now)
                                        {
                                            <i class="bi bi-exclamation-triangle-fill text-danger ms-1"></i>
                                        }
                                    </span>
                                }
                                else
                                {
                                    <span class="text-muted">Tidak ditentukan</span>
                                }
                            </div>
                        </div>
                        <div>
                            <label class="form-label fw-bold">Dibuat:</label>
                            <div class="text-muted">
                                @project.CreatedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("id-ID"))
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Client Information Card -->
            <div class="col-lg-4 mb-3">
                <div class="card h-100">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person-circle me-2"></i>Informasi Klien
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (project.Client != null)
                        {
                            <div class="mb-3">
                                <label class="form-label fw-bold">Nama:</label>
                                <div>@project.Client.Name</div>
                            </div>
                            @if (!string.IsNullOrEmpty(project.Client.Company))
                            {
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Perusahaan:</label>
                                    <div>@project.Client.Company</div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(project.Client.Email))
                            {
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Email:</label>
                                    <div>
                                        <a href="mailto:@project.Client.Email" class="text-decoration-none">
                                            @project.Client.Email
                                        </a>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(project.Client.PhoneNumber))
                            {
                                <div>
                                    <label class="form-label fw-bold">Telepon:</label>
                                    <div>
                                        <a href="tel:@project.Client.PhoneNumber" class="text-decoration-none">
                                            @project.Client.PhoneNumber
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Informasi klien tidak tersedia</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Task Summary Card -->
            <div class="col-lg-4 mb-3">
                <div class="card h-100">
                    <div class="card-header bg-info text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-task me-2"></i>Ringkasan Tugas
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (tasks != null && tasks.Any())
                        {
                            <div class="mb-3">
                                <label class="form-label fw-bold">Total Tugas:</label>
                                <div class="fs-4 fw-bold">@tasks.Count()</div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-bold">Selesai:</label>
                                <div class="text-success">
                                    @tasks.Count(t => t.Status == Models.TaskStatus.Completed) tugas
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-bold">Dalam Proses:</label>
                                <div class="text-warning">
                                    @tasks.Count(t => t.Status == Models.TaskStatus.InProgress) tugas
                                </div>
                            </div>
                            <div>
                                <label class="form-label fw-bold">Belum Dimulai:</label>
                                <div class="text-secondary">
                                    @tasks.Count(t => t.Status == Models.TaskStatus.ToDo) tugas
                                </div>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">Belum ada tugas untuk proyek ini</p>
                            <button class="btn btn-outline-primary btn-sm" @onclick="ViewTasks">
                                <i class="bi bi-plus me-1"></i> Tambah Tugas
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Tasks -->
        @if (tasks != null && tasks.Any())
        {
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-list-task me-2"></i>Tugas Terbaru
                                </h5>
                                <button class="btn btn-primary btn-sm" @onclick="ViewTasks">
                                    <i class="bi bi-eye me-1"></i> Lihat Semua
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="list-group list-group-flush">
                                @foreach (var task in tasks.Take(5))
                                {
                                    <div class="list-group-item border-0 px-0">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <h6 class="mb-1">@task.Title</h6>
                                                @if (!string.IsNullOrEmpty(task.Description))
                                                {
                                                    <p class="mb-1 text-muted small">@task.Description</p>
                                                }
                                            </div>
                                            <div class="text-end">
                                                <span class="badge @GetTaskStatusBadgeClass(task.Status)">
                                                    @GetTaskStatusText(task.Status)
                                                </span>
                                                @if (task.DueDate.HasValue)
                                                {
                                                    <div class="small text-muted mt-1">
                                                        @task.DueDate.Value.ToString("dd/MM/yyyy")
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter] public Guid Id { get; set; }
    
    private Project? project;
    private IEnumerable<ProjectTask>? tasks;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjectDetails();
    }

    private async Task LoadProjectDetails()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            project = await ProjectService.GetProjectByIdAsync(Id);
            
            if (project != null)
            {
                tasks = await TaskService.GetTasksByProjectIdAsync(Id);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading project details: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void EditProject()
    {
        Navigation.NavigateTo($"/projects/{Id}/edit");
    }

    private void ViewTasks()
    {
        Navigation.NavigateTo($"/projects/{Id}/tasks");
    }

    private void GoToProjectList()
    {
        Navigation.NavigateTo("/projects");
    }

    private string GetStatusBadgeClass(ProjectStatus status)
    {
        return status switch
        {
            ProjectStatus.Baru => "bg-secondary",
            ProjectStatus.Aktif => "bg-primary",
            ProjectStatus.OnHold => "bg-warning",
            ProjectStatus.Selesai => "bg-success",
            ProjectStatus.Dibatalkan => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetTaskStatusBadgeClass(Models.TaskStatus status)
    {
        return status switch
        {
            Models.TaskStatus.ToDo => "bg-secondary",
            Models.TaskStatus.InProgress => "bg-warning",
            Models.TaskStatus.Completed => "bg-success",
            _ => "bg-secondary"
        };
    }

    private string GetTaskStatusText(Models.TaskStatus status)
    {
        return status switch
        {
            Models.TaskStatus.ToDo => "Belum Dimulai",
            Models.TaskStatus.InProgress => "Dalam Proses",
            Models.TaskStatus.Completed => "Selesai",
            _ => "Unknown"
        };
    }
}
